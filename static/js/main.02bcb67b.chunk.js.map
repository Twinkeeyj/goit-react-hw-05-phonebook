{"version":3,"sources":["components/ContactList/ContactList.module.css","App.module.css","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/AnswerError/AnswerError.js","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","INITIAL_STATE","name","number","id","ContactForm","state","handleChange","target","setState","uuidv4","value","handleSubmit","event","preventDefault","props","addContact","this","className","classes","container","action","onSubmit","label","htmlFor","input","type","placeholder","onChange","Component","ContactList","list","Delete","TransitionGroup","component","map","el","CSSTransition","classNames","timeout","button","onClick","FilterName","filterRender","filter","e","AnswerError","answer","ERROR","isVisible","App","contacts","toAddContact","find","contact","setTimeout","length","prev","toDeleteContact","obj","index","indexOf","prevState","slice","persistedTask","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","toLowerCase","includes","filterText","filtresTask","in","appear","unmountOnExit","Filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.02bcb67b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactList_container__1PLkM\",\"list\":\"ContactList_list__1Xwsl\",\"button\":\"ContactList_button__1l7Ca\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2dA66\"};","import React, { Component } from 'react';\nimport classes from './ContactForm.module.css';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst INITIAL_STATE = {\n  name: '',\n  number: '',\n  id: '',\n};\n\nexport default class ContactForm extends Component {\n  state = { ...INITIAL_STATE };\n\n  handleChange = ({ target }) => {\n    // const { name } = this.state;\n    this.setState({\n      id: uuidv4(),\n      [target.name]: target.value,\n    });\n  };\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.addContact({ ...this.state });\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <>\n        <form\n          className={classes.container}\n          action=\"\"\n          onSubmit={this.handleSubmit}\n        >\n          <label className={classes.label} htmlFor=\"name\">\n            Name\n          </label>\n          <input\n            className={classes.input}\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"name\"\n            value={name}\n            onChange={this.handleChange}\n          />\n\n          <label className={classes.label} htmlFor=\"number\">\n            Number\n          </label>\n          <input\n            className={classes.input}\n            type=\"tel\"\n            name=\"number\"\n            placeholder=\"number\"\n            value={number}\n            onChange={this.handleChange}\n          />\n          <input type=\"submit\" value=\"Add contact\" />\n        </form>\n      </>\n    );\n  }\n}\n","\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classes from \"./ContactList.module.css\"\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\n\n\nconst ContactList = function ({ list, Delete }) {\n\n  return (\n    <>\n       <TransitionGroup component=\"ul\" className={classes.container}>\n        {list.map((el) => {\n          return (\n              <CSSTransition key={el.id} classNames=\"showbutton\" timeout={250}  >\n            <li key={el.id} className={classes.list}>\n              {el.name} : {el.number}\n              <button className={classes.button} type=\"button\" onClick={() => Delete(el.id)}>\n                Удалить\n              </button>\n            </li>\n              </CSSTransition>\n          );\n        })}\n      </TransitionGroup>\n    </>\n  );\n};\nexport default ContactList;\n\nContactList.propTypes = {\n  Delete: PropTypes.func.isRequired,\n  list: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\n","import React  from 'react';\nimport PropTypes from 'prop-types';\n\nconst FilterName = function ({ filterRender, filter }) {\n  return (\n    <div>\n      <label>Find contacts by name</label>\n      <input\n        type=\"text\"\n        value={filter}\n        onChange={e => filterRender(e.target.value)}\n      />\n    </div>\n  );\n};\nexport default FilterName;\nFilterName.propTypes = {\n  filterRender: PropTypes.func.isRequired,\n  filter: PropTypes.string,\n};\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AnswerError = ({ answer }) => <div className=\"answerContainer\">{answer}</div>;\r\n\r\nAnswerError.propTypes = {\r\n  answer: PropTypes.string.isRequired,\r\n};\r\nexport default AnswerError;","import React, { Component } from 'react';\r\n\r\nimport ContactForm from './components/ContactForm/ContactForm';\r\nimport ContactList from './components/ContactList/ContactList';\r\nimport Filter from './components/Filter/Filter';\r\nimport classes from \"./App.module.css\"\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport AnswerError from \"./components/AnswerError/AnswerError\"\r\n\r\n// const contactList = [\r\n//   {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\r\n//   {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\r\n//   {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\r\n//   {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\r\n// ];\r\nconst ERROR = {\r\n  isVisible: false,\r\n  answer: \"Such a contact is already in the list!\",\r\n};\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: '',\r\n    ...ERROR\r\n  };\r\n  componentDidMount() {\r\n    const persistedTask = localStorage.getItem(\"contacts\");\r\n    if (persistedTask) {\r\n      this.setState({\r\n        contacts: JSON.parse(persistedTask),\r\n      });\r\n    }\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.contacts !== this.state.contacts) {\r\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n  toAddContact = el => {\r\n    const truly = this.state.contacts.find(contact => contact.name === el.name);\r\n    if (truly) {\r\n      this.setState({\r\n        isVisible: true,\r\n       });\r\n      setTimeout(() => {\r\n        this.setState({\r\n          ...ERROR,\r\n        });\r\n      }, 1500);\r\n    } else if(el.name.length>=1){\r\n      this.setState(prev => {\r\n        const updateState = [...prev.contacts, el];\r\n        return { contacts: updateState };\r\n      });\r\n    }\r\n  };\r\n  filterRender = filter => {\r\n    this.setState({ filter });\r\n  };\r\n  filtresTask() {\r\n    const { contacts, filter } = this.state;\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  }\r\n  toDeleteContact = id => {\r\n    const { contacts } = this.state;\r\n    const obj = contacts.find(el => el.id === id);\r\n    const index = contacts.indexOf(obj);\r\n    this.setState(prevState => ({\r\n      contacts: [\r\n        ...prevState.contacts.slice(0, index),\r\n        ...prevState.contacts.slice(index + 1),\r\n      ],\r\n    }));\r\n\r\n  };\r\n  render() {\r\n    const { contacts, filter,isVisible,answer } = this.state;\r\n    const filterText = this.filtresTask();\r\n\r\n    return (\r\n      <>\r\n      <div className={classes.container}>\r\n         <CSSTransition in={true} classNames=\"logo\"timeout={250} appear={true} unmountOnExit>\r\n          <h1 >Phonebook</h1>\r\n        </CSSTransition>\r\n        <ContactForm addContact={this.toAddContact} />\r\n        <h2 >Contacts</h2>\r\n        {contacts.length > 1 && (\r\n          <Filter value={filter} filterRender={this.filterRender} />\r\n        )}\r\n        <ContactList list={filterText} Delete={this.toDeleteContact} />\r\n        <CSSTransition in={isVisible} timeout={250} unmountOnExit classNames=\"answer\">\r\n          <AnswerError answer={answer} />\r\n        </CSSTransition>\r\n      </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactForm_container__2j-k1\",\"label\":\"ContactForm_label__3DMeW\",\"input\":\"ContactForm_input__2u9AA\"};"],"sourceRoot":""}